{"ast":null,"code":"import _defineProperty from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tzeng/Development/reduxlogin/client/src/components/signup/SignupForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nvar SignupForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignupForm, _Component);\n\n  function SignupForm(props) {\n    var _this;\n\n    _classCallCheck(this, SignupForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignupForm).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        errors: {},\n        isLoading: true\n      });\n\n      _this.props.userSignupRequest(_this.state).then(function () {\n        _this.props.addFlashMessage({\n          type: \"success\",\n          text: \"You signed up successfully. welcome\"\n        });\n\n        _this.context.router.history.push('/');\n      }, function (_ref) {\n        var response = _ref.response;\n\n        _this.setState({\n          errors: response.data,\n          isLoading: false\n        });\n      });\n    };\n\n    _this.checkUserExists = function (e) {\n      var field = e.target.name;\n      var val = e.target.value;\n\n      if (val !== '') {\n        _this.props.isUserExists(val).then(function (res) {\n          var errors = _this.state.errors;\n          var invalid;\n\n          if (res.data.user) {\n            errors[field] = 'There is user with such ' + field;\n            invalid = true;\n          } else {\n            invalid = false;\n            errors[field] = '';\n          }\n\n          _this.setState({\n            errors: errors,\n            invalid: invalid\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      errors: {},\n      isLoading: false,\n      invalid: false\n    };\n    return _this;\n  }\n\n  _createClass(SignupForm, [{\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Join our community!\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        value: this.state.username,\n        onChange: this.onChange,\n        type: \"text\",\n        name: \"username\",\n        onBlur: this.checkUserExists,\n        className: classnames('form-control', {\n          'is-invalid': errors.username\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), errors.username && React.createElement(\"span\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, errors.username)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        value: this.state.email,\n        onChange: this.onChange,\n        type: \"email\",\n        name: \"email\",\n        onBlur: this.checkUserExists,\n        className: classnames('form-control', {\n          'is-invalid': errors.email\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), errors.email && React.createElement(\"span\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, errors.email)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        value: this.state.password,\n        onChange: this.onChange,\n        type: \"password\",\n        name: \"password\",\n        className: classnames('form-control', {\n          'is-invalid': errors.password\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), errors.password && React.createElement(\"span\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, errors.password)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Password Confirmation\"), React.createElement(\"input\", {\n        value: this.state.passwordConfirmation,\n        onChange: this.onChange,\n        type: \"password\",\n        name: \"passwordConfirmation\",\n        className: classnames('form-control', {\n          'is-invalid': errors.passwordConfirmation\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), errors.passwordConfirmation && React.createElement(\"span\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, errors.passwordConfirmation)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: this.state.isLoading || this.state.invalid,\n        className: \"bnt btn-primary btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Sign Up\")));\n    }\n  }]);\n\n  return SignupForm;\n}(Component);\n\nSignupForm.contextTypes = {\n  router: PropTypes.object\n};\nSignupForm.propTypes = {\n  userSignupRequest: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired\n};\nexport default SignupForm;","map":{"version":3,"sources":["/Users/tzeng/Development/reduxlogin/client/src/components/signup/SignupForm.js"],"names":["React","Component","PropTypes","classnames","SignupForm","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","errors","isLoading","userSignupRequest","state","then","addFlashMessage","type","text","context","router","history","push","response","data","checkUserExists","field","val","isUserExists","res","invalid","user","username","email","password","passwordConfirmation","contextTypes","object","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass SignupForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            passwordConfirmation: '',\n            errors: {},\n            isLoading: false,\n            invalid: false\n        }\n    }\n\n    static contextTypes = {\n        router: PropTypes.object\n    }\n\n    static propTypes = {\n        userSignupRequest: PropTypes.func.isRequired,\n        addFlashMessage: PropTypes.func.isRequired\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ errors: {}, isLoading: true });\n        this.props.userSignupRequest(this.state).then(\n            () => {\n                this.props.addFlashMessage({\n                    type: \"success\",\n                    text: \"You signed up successfully. welcome\"\n                })\n                this.context.router.history.push('/')\n            },\n            ({ response }) => {this.setState({ errors: response.data, isLoading: false })}\n        )\n\n    }\n\n    checkUserExists = (e) => {\n        const field = e.target.name;\n        const val = e.target.value;\n        if(val!==''){\n            this.props.isUserExists(val).then(res => {\n                let errors = this.state.errors;\n                let invalid;\n                if(res.data.user){\n                    errors[field] = 'There is user with such ' + field;\n                    invalid = true;\n                } else {\n                    invalid = false\n                    errors[field] = '';\n                }\n\n                this.setState({ errors, invalid });\n            })\n        }\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <form onSubmit={ this.onSubmit }>\n                <h1>Join our community!</h1>\n                <div className=\"form-group\">\n                    <label className='control-label'>Username</label>\n\n                    <input \n                        value = { this.state.username }\n                        onChange={ this.onChange }\n                        type=\"text\"\n                        name=\"username\"\n                        onBlur={ this.checkUserExists }\n                        className={ classnames('form-control', { 'is-invalid': errors.username }) }\n                    />\n                    { errors.username && <span className='form-text text-muted'>{ errors.username }</span> }\n                </div>\n\n                <div className=\"form-group\">\n                    <label className='control-label'>Email</label>\n\n                    <input \n                        value = { this.state.email }\n                        onChange={ this.onChange }\n                        type=\"email\"\n                        name=\"email\"\n                        onBlur={ this.checkUserExists }\n                        className={ classnames('form-control', { 'is-invalid': errors.email }) }\n                    />\n                    { errors.email && <span className='form-text text-muted'>{ errors.email }</span> }\n                </div>\n\n                <div className=\"form-group\">\n                    <label className='control-label'>Password</label>\n\n                    <input \n                        value = { this.state.password }\n                        onChange={ this.onChange }\n                        type=\"password\"\n                        name=\"password\"\n                        className={ classnames('form-control', { 'is-invalid': errors.password }) }\n                    />\n                    { errors.password && <span className='form-text text-muted'>{ errors.password }</span> }\n                </div>\n\n                <div className=\"form-group\">\n                    <label className='control-label'>Password Confirmation</label>\n\n                    <input \n                        value = { this.state.passwordConfirmation }\n                        onChange={ this.onChange }\n                        type=\"password\"\n                        name=\"passwordConfirmation\"\n                        className={ classnames('form-control', { 'is-invalid': errors.passwordConfirmation }) }\n                    />\n                    { errors.passwordConfirmation && <span className='form-text text-muted'>{ errors.passwordConfirmation }</span> }\n                </div>\n\n                <div className=\"form-group\">\n                    <button disabled={this.state.isLoading || this.state.invalid} className=\"bnt btn-primary btn-lg\">\n                        Sign Up\n                    </button>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}