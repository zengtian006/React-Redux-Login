{"ast":null,"code":"import _classCallCheck from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tzeng/Development/reduxlogin/client/src/components/events/EventForm.js\";\nimport React, { Component } from 'react';\n\nvar EventForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventForm, _Component);\n\n  function EventForm() {\n    _classCallCheck(this, EventForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventForm).apply(this, arguments));\n  }\n\n  _createClass(EventForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"New Event\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        value: title,\n        onChange: this.onChange,\n        type: \"text\",\n        name: \"identifier\",\n        className: classnames('form-control', {\n          'is-invalid': errors.title\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), errors.title && React.createElement(\"span\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, errors.title)));\n    }\n  }]);\n\n  return EventForm;\n}(Component);\n\nexport default EventForm;","map":{"version":3,"sources":["/Users/tzeng/Development/reduxlogin/client/src/components/events/EventForm.js"],"names":["React","Component","EventForm","onSubmit","title","onChange","classnames","errors"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,S;;;;;;;;;;;;;6BACO;AAEL,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI;AACI,QAAA,KAAK,EAAKC,KADd;AAEI,QAAA,QAAQ,EAAG,KAAKC,QAFpB;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,IAAI,EAAC,YAJT;AAKI,QAAA,SAAS,EAAGC,UAAU,CAAC,cAAD,EAAiB;AAAE,wBAAcC,MAAM,CAACH;AAAvB,SAAjB,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAUMG,MAAM,CAACH,KAAP,IAAgB;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCG,MAAM,CAACH,KAAhD,CAVtB,CAFJ,CADJ;AAiBH;;;;EApBmBH,S;;AAwBxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react'\n\n\nclass EventForm extends Component {\n    render() {\n       \n        return (\n            <form onSubmit={this.onSubmit}>\n                <h1>New Event</h1>\n                <div className=\"form-group\">\n                    <label className='control-label'>Title</label>\n\n                    <input \n                        value = { title }\n                        onChange={ this.onChange }\n                        type=\"text\"\n                        name=\"identifier\"\n                        className={ classnames('form-control', { 'is-invalid': errors.title }) }\n                    />\n                    { errors.title && <span className='form-text text-muted'>{ errors.title }</span> }\n                </div>\n            </form>\n        )\n    }\n}\n\n\nexport default EventForm;"]},"metadata":{},"sourceType":"module"}