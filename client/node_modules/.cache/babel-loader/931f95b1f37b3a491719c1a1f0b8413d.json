{"ast":null,"code":"var _jsxFileName = \"/Users/tzeng/Development/reduxlogin/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport NagicationBar from './components/NavigationBar';\nimport FlashMessageList from './components/flash/FlashMessageList';\nimport * as serviceWorker from './serviceWorker';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport routers from './routers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport jwtDecode from 'jwt-decode';\nimport setAuthorizationToken from './utils/setAuthorizationToken';\nimport { setCurrentUser } from './actions/authActions';\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(logger, thunk)));\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(NagicationBar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(FlashMessageList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), routers))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/tzeng/Development/reduxlogin/client/src/index.js"],"names":["React","ReactDOM","NagicationBar","FlashMessageList","serviceWorker","logger","composeWithDevTools","thunk","BrowserRouter","Router","routers","createStore","applyMiddleware","Provider","rootReducer","jwtDecode","setAuthorizationToken","setCurrentUser","store","localStorage","jwtToken","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,IAAMC,KAAK,GAAGP,WAAW,CACrBG,WADqB,EAErBR,mBAAmB,CACfM,eAAe,CAACP,MAAD,EAASE,KAAT,CADA,CAFE,CAAzB;;AAOA,IAAIY,YAAY,CAACC,QAAjB,EAA2B;AACvBJ,EAAAA,qBAAqB,CAACG,YAAY,CAACC,QAAd,CAArB;AACAF,EAAAA,KAAK,CAACG,QAAN,CAAeJ,cAAc,CAACF,SAAS,CAACI,YAAY,CAACC,QAAd,CAAV,CAA7B;AACH;;AAEDnB,QAAQ,CAACqB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAKJ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGMR,OAHN,CADJ,CADJ,CADJ,EAUIa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVJ,E,CAaA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport NagicationBar from './components/NavigationBar'\nimport FlashMessageList from './components/flash/FlashMessageList'\nimport * as serviceWorker from './serviceWorker';\n\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport routers from './routers';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport jwtDecode from 'jwt-decode';\n\nimport setAuthorizationToken from './utils/setAuthorizationToken';\nimport { setCurrentUser } from './actions/authActions';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(logger, thunk)\n    )\n);\n\nif (localStorage.jwtToken) {\n    setAuthorizationToken(localStorage.jwtToken);\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n}\n\nReactDOM.render(\n    <Provider store = { store }>\n        <Router>\n            <div>\n                <NagicationBar />\n                <FlashMessageList />\n                { routers }\n            </div>\n        </Router>\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}