{"ast":null,"code":"import _defineProperty from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tzeng/Development/reduxlogin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tzeng/Development/reduxlogin/client/src/components/login/LoginForm.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport validateInput from '../../utils/validations/login';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/authActions';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.isValid = function () {\n      var _validateInput = validateInput(_this.state),\n          errors = _validateInput.errors,\n          isValid = _validateInput.isValid;\n\n      if (!isValid) {\n        _this.setState({\n          errors: errors\n        });\n      }\n\n      return isValid;\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.isValid()) {\n        _this.setState({\n          errors: {},\n          isLoading: true\n        });\n\n        _this.props.login(_this.state).then(function (res) {\n          return _this.context.router.history.push('/');\n        }, function (_ref) {\n          var response = _ref.response;\n\n          _this.setState({\n            errors: response.data.errors,\n            isLoading: false\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      identifier: '',\n      password: '',\n      errors: {},\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          identifier = _this$state.identifier,\n          password = _this$state.password,\n          isLoading = _this$state.isLoading;\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Login\"), errors.form && React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, errors.form), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Username / Email\"), React.createElement(\"input\", {\n        value: identifier,\n        onChange: this.onChange,\n        type: \"text\",\n        name: \"identifier\",\n        className: classnames('form-control', {\n          'is-invalid': errors.identifier\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), errors.identifier && React.createElement(\"span\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, errors.identifier)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        value: password,\n        onChange: this.onChange,\n        type: \"password\",\n        name: \"password\",\n        className: classnames('form-control', {\n          'is-invalid': errors.password\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), errors.password && React.createElement(\"span\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, errors.password)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: isLoading,\n        className: \"bnt btn-primary btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nLoginForm.contextTypes = {\n  router: PropTypes.object\n};\nexport default connect(null, {\n  login: login\n})(LoginForm);","map":{"version":3,"sources":["/Users/tzeng/Development/reduxlogin/client/src/components/login/LoginForm.js"],"names":["React","Component","classnames","PropTypes","validateInput","connect","login","LoginForm","props","onChange","e","setState","target","name","value","isValid","state","errors","onSubmit","preventDefault","isLoading","then","res","context","router","history","push","response","data","identifier","password","form","contextTypes","object"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,2BAAtB;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;;AADc,UAgBlBC,QAhBkB,GAgBP,UAACC,CAAD,EAAO;AACd,YAAKC,QAAL,qBACKD,CAAC,CAACE,MAAF,CAASC,IADd,EACqBH,CAAC,CAACE,MAAF,CAASE,KAD9B;AAGH,KApBiB;;AAAA,UAsBlBC,OAtBkB,GAsBR,YAAM;AAAA,2BACgBX,aAAa,CAAC,MAAKY,KAAN,CAD7B;AAAA,UACJC,MADI,kBACJA,MADI;AAAA,UACIF,OADJ,kBACIA,OADJ;;AAGZ,UAAG,CAACA,OAAJ,EAAY;AACR,cAAKJ,QAAL,CAAc;AAACM,UAAAA,MAAM,EAANA;AAAD,SAAd;AACH;;AAED,aAAOF,OAAP;AACH,KA9BiB;;AAAA,UAgClBG,QAhCkB,GAgCP,UAACR,CAAD,EAAO;AACdA,MAAAA,CAAC,CAACS,cAAF;;AACA,UAAG,MAAKJ,OAAL,EAAH,EAAkB;AACd,cAAKJ,QAAL,CAAc;AAACM,UAAAA,MAAM,EAAE,EAAT;AAAaG,UAAAA,SAAS,EAAE;AAAxB,SAAd;;AACA,cAAKZ,KAAL,CAAWF,KAAX,CAAiB,MAAKU,KAAtB,EAA6BK,IAA7B,CACI,UAACC,GAAD;AAAA,iBAAS,MAAKC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiC,GAAjC,CAAT;AAAA,SADJ,EAEI,gBAAkB;AAAA,cAAfC,QAAe,QAAfA,QAAe;;AAAC,gBAAKhB,QAAL,CAAc;AAAEM,YAAAA,MAAM,EAAEU,QAAQ,CAACC,IAAT,CAAcX,MAAxB;AAAgCG,YAAAA,SAAS,EAAE;AAA3C,WAAd;AAAkE,SAFzF;AAIH;AACJ,KAzCiB;;AAEd,UAAKJ,KAAL,GAAa;AACTa,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTb,MAAAA,MAAM,EAAE,EAHC;AAITG,MAAAA,SAAS,EAAE;AAJF,KAAb;AAFc;AASjB;;;;6BAkCQ;AAAA,wBAC6C,KAAKJ,KADlD;AAAA,UACEC,MADF,eACEA,MADF;AAAA,UACUY,UADV,eACUA,UADV;AAAA,UACsBC,QADtB,eACsBA,QADtB;AAAA,UACgCV,SADhC,eACgCA,SADhC;AAEL,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKF,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEMD,MAAM,CAACc,IAAP,IAAe;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCd,MAAM,CAACc,IAA5C,CAFrB,EAGI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAGI;AACI,QAAA,KAAK,EAAKF,UADd;AAEI,QAAA,QAAQ,EAAG,KAAKpB,QAFpB;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,IAAI,EAAC,YAJT;AAKI,QAAA,SAAS,EAAGP,UAAU,CAAC,cAAD,EAAiB;AAAE,wBAAce,MAAM,CAACY;AAAvB,SAAjB,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAUMZ,MAAM,CAACY,UAAP,IAAqB;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCZ,MAAM,CAACY,UAAhD,CAV3B,CAHJ,EAgBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAGI;AACI,QAAA,KAAK,EAAKC,QADd;AAEI,QAAA,QAAQ,EAAG,KAAKrB,QAFpB;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,IAAI,EAAC,UAJT;AAKI,QAAA,SAAS,EAAGP,UAAU,CAAC,cAAD,EAAiB;AAAE,wBAAce,MAAM,CAACa;AAAvB,SAAjB,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAUMb,MAAM,CAACa,QAAP,IAAmB;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCb,MAAM,CAACa,QAAhD,CAVzB,CAhBJ,EA4BI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,QAAQ,EAAEV,SAAlB;AAA6B,QAAA,SAAS,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CA5BJ,CADJ;AAoCH;;;;EAlFmBnB,S;;AAAlBM,S,CAYKyB,Y,GAAe;AAClBR,EAAAA,MAAM,EAAErB,SAAS,CAAC8B;AADA,C;AAyE1B,eAAe5B,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA,KAAK,EAALA;AAAD,CAAP,CAAP,CAAuBC,SAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport validateInput from '../../utils/validations/login'\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/authActions';\n       \nclass LoginForm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            identifier: '',\n            password: '',\n            errors: {},\n            isLoading: false\n        }\n\n    }\n\n    static contextTypes = {\n        router: PropTypes.object\n    }\n\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    isValid = () => {\n        const { errors, isValid } = validateInput(this.state);\n\n        if(!isValid){\n            this.setState({errors})\n        }\n        \n        return isValid;\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(this.isValid()){\n            this.setState({errors: {}, isLoading: true});\n            this.props.login(this.state).then(\n                (res) => this.context.router.history.push('/'),\n                ({ response }) => {this.setState({ errors: response.data.errors, isLoading: false })}\n            );\n        }\n    }\n\n    render() {\n        const {errors, identifier, password, isLoading} = this.state;\n        return (\n            <form onSubmit={this.onSubmit}>\n                <h1>Login</h1>\n                { errors.form && <div className=\"alert alert-danger\">{errors.form}</div>}\n                <div className=\"form-group\">\n                    <label className='control-label'>Username / Email</label>\n\n                    <input \n                        value = { identifier }\n                        onChange={ this.onChange }\n                        type=\"text\"\n                        name=\"identifier\"\n                        className={ classnames('form-control', { 'is-invalid': errors.identifier }) }\n                    />\n                    { errors.identifier && <span className='form-text text-muted'>{ errors.identifier }</span> }\n                </div>\n\n                <div className=\"form-group\">\n                    <label className='control-label'>Password</label>\n\n                    <input \n                        value = { password }\n                        onChange={ this.onChange }\n                        type=\"password\"\n                        name=\"password\"\n                        className={ classnames('form-control', { 'is-invalid': errors.password }) }\n                    />\n                    { errors.password && <span className='form-text text-muted'>{ errors.password }</span> }\n                </div>\n                <div className=\"form-group\">\n                    <button disabled={isLoading} className=\"bnt btn-primary btn-lg\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default connect(null, {login})(LoginForm)"]},"metadata":{},"sourceType":"module"}